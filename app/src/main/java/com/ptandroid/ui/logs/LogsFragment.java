package com.ptandroid.ui.logs;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.ViewModelProvider;

import com.google.android.material.snackbar.Snackbar;
import com.ptandroid.R;
import com.ptandroid.databinding.FragmentLogsBinding;

public class LogsFragment extends Fragment {
    private TextView editTextLogs;
    private FragmentLogsBinding binding;

    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        LogsViewModel logsViewModel = new ViewModelProvider(this).get(LogsViewModel.class);

        binding = FragmentLogsBinding.inflate(inflater, container, false);
        View root = binding.getRoot();
        editTextLogs = binding.logsConsole;

        appendToLogs("this is log test");
        final TextView textView = binding.textLogs;

        logsViewModel.getText().observe(getViewLifecycleOwner(), textView::setText);
        Button clearConsoleButton = root.findViewById(R.id.clear_console); // Reference to your Clear Console button
        clearConsoleButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                clearLogsConsole(); // Call method to clear logs console
            }
        });
        return root;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        binding = null;
    }

    private void clearLogsConsole() {
        if (editTextLogs != null) {
            editTextLogs.setText("");
            appendToLogs("message");// Set an empty string to clear the logs

        }
    }

    public void appendToLogs(String message) {
        if (editTextLogs != null) {
            editTextLogs.append(message + "\n"); // Append message with a newline character
        }
    }
}