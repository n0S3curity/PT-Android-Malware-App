// Generated by view binder compiler. Do not edit!
package com.ptandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ptandroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppBarMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button ContetProvider;

  @NonNull
  public final Button OpenActivity;

  @NonNull
  public final Button SendIntent;

  @NonNull
  public final Button StartService;

  @NonNull
  public final Button StopService;

  @NonNull
  public final Button TestNotification;

  @NonNull
  public final Button biometricButton;

  @NonNull
  public final TextView currentPackageTextview;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final Button updatePackageButton;

  private AppBarMainBinding(@NonNull CoordinatorLayout rootView, @NonNull Button ContetProvider,
      @NonNull Button OpenActivity, @NonNull Button SendIntent, @NonNull Button StartService,
      @NonNull Button StopService, @NonNull Button TestNotification,
      @NonNull Button biometricButton, @NonNull TextView currentPackageTextview,
      @NonNull Toolbar toolbar, @NonNull Button updatePackageButton) {
    this.rootView = rootView;
    this.ContetProvider = ContetProvider;
    this.OpenActivity = OpenActivity;
    this.SendIntent = SendIntent;
    this.StartService = StartService;
    this.StopService = StopService;
    this.TestNotification = TestNotification;
    this.biometricButton = biometricButton;
    this.currentPackageTextview = currentPackageTextview;
    this.toolbar = toolbar;
    this.updatePackageButton = updatePackageButton;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_bar_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppBarMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Contet_provider;
      Button ContetProvider = ViewBindings.findChildViewById(rootView, id);
      if (ContetProvider == null) {
        break missingId;
      }

      id = R.id.Open_Activity;
      Button OpenActivity = ViewBindings.findChildViewById(rootView, id);
      if (OpenActivity == null) {
        break missingId;
      }

      id = R.id.Send_intent;
      Button SendIntent = ViewBindings.findChildViewById(rootView, id);
      if (SendIntent == null) {
        break missingId;
      }

      id = R.id.Start_service;
      Button StartService = ViewBindings.findChildViewById(rootView, id);
      if (StartService == null) {
        break missingId;
      }

      id = R.id.Stop_service;
      Button StopService = ViewBindings.findChildViewById(rootView, id);
      if (StopService == null) {
        break missingId;
      }

      id = R.id.Test_notification;
      Button TestNotification = ViewBindings.findChildViewById(rootView, id);
      if (TestNotification == null) {
        break missingId;
      }

      id = R.id.biometric_button;
      Button biometricButton = ViewBindings.findChildViewById(rootView, id);
      if (biometricButton == null) {
        break missingId;
      }

      id = R.id.current_package_textview;
      TextView currentPackageTextview = ViewBindings.findChildViewById(rootView, id);
      if (currentPackageTextview == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.update_package_button;
      Button updatePackageButton = ViewBindings.findChildViewById(rootView, id);
      if (updatePackageButton == null) {
        break missingId;
      }

      return new AppBarMainBinding((CoordinatorLayout) rootView, ContetProvider, OpenActivity,
          SendIntent, StartService, StopService, TestNotification, biometricButton,
          currentPackageTextview, toolbar, updatePackageButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
